{"version":3,"sources":["border.gif","20200502_215540.jpg","stars.jpg","fist.gif","5RdA918.gif","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","src","logo2","logo4","stars3","stars4","stars5","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,oC,kBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,+OCyG5BC,MAhGf,WACE,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,QAEb,4BACE,uBAAGA,UAAU,cAAb,wCADF,IACuC,uBAAGA,UAAU,QAAb,oBADvC,IACgF,uBAAGA,UAAU,cAAb,yCAEhF,4BACE,uBAAGA,UAAU,SAAb,qBACA,8BAEF,wBAAIA,UAAU,OAAd,SAEA,uBAAGA,UAAU,SAAb,sDAGA,yBAAKA,UAAU,cAAcC,IAAKC,MAClC,uBAAGF,UAAU,SAAb,uBACA,uBAAGA,UAAU,SAAb,gFAC+E,6BAD/E,yEAMA,wBAAIA,UAAU,OAAd,YAEA,uBAAGA,UAAU,gBAAb,4BAC2B,6BAD3B,+BAEgC,6BAFhC,mBAGoB,6BAHpB,mBAIoB,6BAJpB,kCAKmC,6BALnC,6BAM8B,6BAN9B,6BAO8B,8BAE9B,wBAAIA,UAAU,OAAd,aACA,uBAAGA,UAAU,SAAb,oFACmF,6BADnF,8DAKA,yBAAKC,IAAKE,IAAOH,UAAU,SAC3B,yBAAKA,UAAU,cAAcC,IAAKG,MAClC,yBAAKH,IAAKE,IAAOH,UAAU,SAC3B,uBAAGA,UAAU,SAAb,iCAIA,uBAAGA,UAAU,SAAb,2EAC0E,6BAD1E,gGAE8F,6BAF9F,6EAG2E,6BAH3E,uEAIsE,6BAJtE,sDAQA,yBAAKC,IAAKI,IAAQL,UAAU,UAC5B,yBAAKC,IAAKK,IAAQN,UAAU,UAC5B,6BACA,6BACA,6BACA,uBAAGA,UAAU,SAAb,yFACwF,6BADxF,oGAKA,wBAAIA,UAAU,OAAd,kBACA,uBAAGA,UAAU,eACX,wDAEF,uBAAGA,UAAU,eACX,kFAEF,uBAAGA,UAAU,eACX,sGAEF,uBAAGA,UAAU,eACX,kEAEF,uBAAGA,UAAU,eACX,6DAIF,6BACA,6BACA,6BACA,6BACA,6BACA,uBAAGA,UAAU,SAAb,oBCvFYO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.003ad492.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/border.0abf54e5.gif\";","module.exports = __webpack_public_path__ + \"static/media/20200502_215540.86c83ddb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stars.bfa0217e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fist.c5f9731a.gif\";","module.exports = __webpack_public_path__ + \"static/media/5RdA918.b956d006.gif\";","import React from 'react';\nimport './App.css';\n\nimport logo2 from './20200502_215540.jpg'; // Tell webpack this JS file uses this image\nimport logo4 from './border.gif'; // Tell webpack this JS file uses this image\nimport stars3 from './stars.jpg'; // Tell webpack this JS file uses this image\nimport stars4 from './fist.gif'; // Tell webpack this JS file uses this image\nimport stars5 from './5RdA918.gif'; // Tell webpack this JS file uses this image\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App2\">\n\n        <h1>\n          <a className=\"love-label\">✫✫✫✫✫✫</a> <a className=\"Name\">Hayden Wiltshire</a> <a className=\"love-label\">✫✫✫✫✫✫</a>\n        </h1>\n        <h2>\n          <a className=\"Title\">software engineer</a>\n          <br />\n        </h2>\n        <h2 className=\"Sub\"> Bio </h2>\n\n        <p className=\"About\">\n          I have been developing software for over 10 years.\n          </p>\n        <img className=\"profile-img\" src={logo2} />\n        <p className=\"About\">(The only OS I use)</p>\n        <p className=\"About\">\n          During that time I have worked heavily with Visual Basic, Excel and Notepad. <br/>\n          If you have a problem - chances are I have a spreadsheet to solve it.\n         </p>\n\n\n        <h2 className=\"Sub\"> Skills </h2>\n\n        <p className=\"About skills\">\n          | Chewing on couch leg | <br />\n            | Hiding bones in backyard |<br />\n            | Chasing Cars |<br />\n            | Fighting cat |<br />\n            | Chasing squirrels up trees | <br />\n            | Not sitting when told | <br />\n            | Jumping in big puddle | <br />\n        </p>\n        <h2 className=\"Sub\"> Hobbies </h2>\n        <p className=\"About\">\n          I am nationally ranked power eating champion. In 2016 I won the South Australian <br />\n          \"King of the Waffles\" power eating event for the 3rd time.\n         </p>\n\n        <img src={logo4} className=\"waff\" />\n        <img className=\"profile-img\" src={stars3} />\n        <img src={logo4} className=\"waff\" />\n        <p className=\"About\">\n          (This is me: aka King Waffle)\n          </p>\n \n        <p className=\"About\">\n          As a troubled youth in baltmore I had one to many run-ins with the law. <br />\n         I was senteced to community service at Maryland School of the Arts. This is where I met Nora <br />\n         We fell in love and encouraged each other to follow our passion for dance <br />\n          and fulfil our dreams.  My idols (below) are Van Damme and Statham  <br />\n          My dancing career ended when the rhythm died (99')\n        </p>\n\n        <img src={stars4} className=\"waff2\" />\n        <img src={stars5} className=\"waff2\" />\n        <br />\n        <br />\n        <br />\n        <p className=\"About\">\n          Most nights I enjoy barking into darkness. The sound of my own bark is very pleasing. <br />\n          Apart from that a good dragging of the ass across the nice carpets for no reason is also hobbie.\n        </p>\n\n        <h2 className=\"Sub\"> Testimonials </h2>\n        <p className=\"About Green\">\n          <i> \"Very good boy\" - Mum  </i>\n        </p>\n        <p className=\"About Green\">\n          <i> \"Loudest bark in neighbourhood\" - Guy Next Door  </i>\n        </p>\n        <p className=\"About Green\">\n          <i> \"If he eats any faster he is going to throw up again\" - Mum (again)  </i>\n        </p>\n        <p className=\"About Green\">\n          <i> \"Done eat your own vomit\" - Dad  </i>\n        </p>\n        <p className=\"About Green\">\n          <i> \"Bark\" - Other dog at park  </i>\n        </p>\n\n\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <p className=\"About\"> Ⓒ 1997 </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}